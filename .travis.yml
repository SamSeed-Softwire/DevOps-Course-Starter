if: type = pull_request

jobs:
  include:

  - stage: test
    before_script:
    - echo $DOCKER_TOKEN | docker login --username $DOCKER_USERNAME --password-stdin
    - docker pull samseedsoftwire/todo-app-test:latest
    - docker build --target test --tag samseedsoftwire/todo-app-test:latest .
    script:
    - docker run samseedsoftwire/todo-app-test:latest "tests/tests_unit" -rA
    - docker run samseedsoftwire/todo-app-test:latest "tests/tests_integration" -rA
    - docker run -e MONGO_USERNAME=$MONGO_USERNAME -e MONGO_HOST=$MONGO_HOST -e MONGO_TODO_APP_DATABASE=$MONGO_TODO_APP_DATABASE -e MONGO_PASSWORD=$MONGO_PASSWORD -e FLASK_APP=$FLASK_APP -e FLASK_ENV=$FLASK_ENV samseedsoftwire/todo-app-test:latest "tests/tests_e2e" -rA
    after_success:
    - docker tag samseedsoftwire/todo-app-test:latest samseedsoftwire/todo-app-test:$TRAVIS_COMMIT
    - docker push samseedsoftwire/todo-app-test:latest
    - docker push samseedsoftwire/todo-app-test:$TRAVIS_COMMIT

  - stage: publish
    before_script:
    - echo $DOCKER_TOKEN | docker login --username $DOCKER_USERNAME --password-stdin
    - docker build --target prod --tag samseedsoftwire/todo-app-prod:latest .
    - docker tag samseedsoftwire/todo-app-prod:latest samseedsoftwire/todo-app-prod:$TRAVIS_COMMIT
    script:
    - docker push samseedsoftwire/todo-app-prod:latest
    - docker push samseedsoftwire/todo-app-prod:$TRAVIS_COMMIT

  - stage: deploy
    before_script:
    - echo $DOCKER_TOKEN | docker login --username $DOCKER_USERNAME --password-stdin
    - docker pull samseedsoftwire/todo-app-prod:latest
    script:
    - docker build --target prod --cache-from samseedsoftwire/todo-app-prod:latest .
    after_success:
    - docker tag samseedsoftwire/todo-app-prod:latest registry.heroku.com/$HEROKU_APP_NAME/web
    before_deploy:
    - heroku container:login --verbose
    deploy:
      provider: script
      script: bash ./deploy_prod.sh
      skip_cleanup: true
    after_deploy:
    - curl "https://$HEROKU_APP_NAME.herokuapp.com/"
    - curl_response=$(curl "https://$HEROKU_APP_NAME.herokuapp.com/")
    - if [[ "$curl_response" == *"To-Do App"* ]]; then echo "Successful curl!"; else >&2 echo "Curl failure :("; return 1; fi

services:
- docker

env:
  global:

  ### Docker ###
  - DOCKER_USERNAME=samseedsoftwire
  # DOCKER_TOKEN
  - secure: "Unpltfd/dDkhWPM7aHMzQvLn48HUyQDI1yNZjCQ59oaSNxRugzcIhiIgi8VUMJ2YdAtZWl2+Xs5AcLkvEngWAokwlBGHoDb8fGKIjWaYPUjuR/D92VnMAgcZXBgRDYTpoBbUOjs5YIHz1PgDLt2RV1RxlDqBfadUy7qMuJ8h2wjP4VFSdctQ5luiwIlvGS2rKtqRyX/fI31ZRDFAP80T3nVRtp8iGezsCbGTBoYtCBtNzK2bU4E0gED33Zd6wo+4Q+1uB5QyfYX7NIDixcnjIjCrTKOXpMzYKhFy9HLgKtm79nHDgUHL+zywAdqjwV6vE61egIUGH7m86FFNgvyJK9c0kN1Pcf7NiST5XFIwyi7Y86ji0uOS40FuosOAxgVY42jyRdNhDkpS4m4CA2bcO6FVhbstroIilw6wAtlVCfg0rJyqgg+C+UCrsdQZohjFhge3wupMPlT3vVlGJbXKtxIdOySaM5K1FK1P8hEQMFKX1N12Qzl6AMVVMxq+7wlED9KohM2/Yt+tETdy9AldeVO7zHSVGUFBSGQ/5h+hOUWAT5rJH8TVnkTR2dLdtDiVjlWHPjSBS89lPk7bpN9gvQzihBrcPQ3bzWFHr+4xrr6p7IyUL9MB3Rh/AC7IkMZZvL/ygQfExp/uXYE8kMIxVMzOJC7zuUpVLOagheqyq28="

  ### Flask ###
  - FLASK_APP=./application/app
  - FLASK_ENV=development

  ### Heroku ###
  # HEROKU_API_KEY (Heroku long-lasting authorisation token)
  - secure: "GTxM+8rCszqd6VQ/rb24cmRPfY9FjBn4Te+AFGWq8J9ZxsdmCvVBMJ0AXUsIPXgghLu6gQryjjkJwUcsi9KL7Kcm3YJuqHzgTNCqgXw+VcAqX2vZwMTKFUQZR2reBQ5lqEDCq3th35qdd4BQi21UWzvKpkqDSEukLbHF/gJRdP+2h5TbU80SM7U60RQST3pFMuLfr0CKxZWgZ+VuyXoUmlt90UNjLmiU/khGEn90/aAjSGbFna75g8E+6IzWu/iGnlRQNZoyHNlI/a4o2MNldvGneUmiB5yrOhKciKzWodwwLHewoevOA1sZi71oInb3N1Px5L2bsRsUZZ4hcWbSYGoInSI9GsawAQ88RkREZ8aKD0LZVys9EHXf8sFM1IFBb2CdgH98EpH5wnd5exUSuWuGbJNajoJrOak5Wk9tD/r5fZJ6bQUSOLSyHdpUuwFDO1vyY5zqzq4nyyMJZpsSb09LJfIjnbfWLzL7bQ46wBXVkVOxDJvtH96017U3Ysf7aGFXC3z1lvU2XWWiG+E0WFa2KlS+xhG2V3hgVzmD8HwW3+u2B1VxVE5cFVH0I5yZ1blmj45TwsAcXMaXlGf8ltP4eAxvDRso7Mzna/wWVhRmmUYBKytdYYKsa1Su7lzfezF5xJb12k9AFb4H+q/tw7QDQ2r4LUftV8nuyQ2ZtWA="
  # HEROKU_APP_NAME
  - HEROKU_APP_NAME=still-spire-18415

  ### MongoDB ###
  - MONGO_USERNAME=new-user_0
  - MONGO_HOST=cluster0.1ukux.mongodb.net
  - MONGO_TODO_APP_DATABASE=db0
  # MONGO_PASSWORD
  - secure: "O8kAL06h3uaBNTYfc5VgL2tG5yv2v3BMLm8Fd5qc/+EPRdMmGGMWtDe280e8lIjGnl1Fwqx9ROR35usH1Gs6OAP4uY1ZQa/HC4UEp5i+mTfF92kcEXohLTxGPPxlUl5X0VJrr2II/VVUvB+A+cnBPTjDFV3RUf/JRYrbP1wWfPuplfRTgu0Wn2zw58Pw5Kmz2VIQgWc/LLGm/UUee4YuFG1C0yM31woSVWvNEuRBldACRyo73mhU5UdTesBf7LK4mpdIa4X+D2vNAZxDV82Vt9319nYAnRcKhAbxFGgiXCJglLUHw17FQSFFv+x7s1LHU52DQd29Xn+97+cGEcf9Z1oj7qOPOuvg+8yPfYXoBFUICc6ytAQpH2437PEoAFuXd0fc9MMbT9vb+W5K2OPEda/ZPfakH5pnqwHNyJyYVxITf6Pyt/fUCZTiiw6JfYYemktDHQjez/fvFCVwU4tvdPDMkWZzMl0FZ68BdVfBBnPeBM9qdmZb7ohj9g9QA/5d9LdfoJpOT0Rq76Jw6WcgmVHgPaXr3+jbGHUClwLDEMCYRtK3lH4AVyirQyqW6s4hQD/faGjpamVE1KBiA3r8W+Cxbc28sgaY0IVe3Njo6Y/wb/DrqKaSSFAqGvIUnqJ2gp1dilNG3iFz+V4P1RU7lx7ItIVfK3FF/p1/0WHMXng="

notifications:
  slack:
    secure: "bk8pIUB45EdlSUDHVsMif7N6QnbsWPc5gHYOXWA7KuCYbFzwME6uinXghoXijIUexhJ1l6X22AXQoxKOGCKQgBBFc4U+R2EeGikIY6d/k2k14j1W6L13cdgJ42mQphDtWUB15yObZk1Nlk94PoFbIech1EIc6YUkzeHG27CNiLGmVSSFXVn29qIzUF0eJhln6YelHJXKFWMIoyJJUHx599IE/A9T2Cu2jNwjPMyvfcyHwCJ+Pk2Yl7o9QJs7d8P+enZjRxOBT6tFDiGZYfcK2HlvwJaD3s0ZFJHpC9+PDDo2GVTa9RhOop3ScAZup10iiyAzyCa36w6/Rqqyj4tK2fZJpIv/L7pHXV85zsrBBIsh3bHt2zBVxXKcrlfYJ7XyvYoPi2yPuD6A6ARFCrcfmTyfePhdvjL3MaIHXbZcElAiH8oBbPJ2kj+3asgGjTAUWdnfF/o6ozlfD5/CVhRHNY0KmqDMqjJkXcLzFZOUIraK2SaC5oQmfoSj+CauDsxKt3Lk/pmzR9TdZfh07ce99GYx+sS2umSxriDLib9oMinpwNDWO487vTArjTKd0DJrgdZ1+6S8lZtgDsXHD/1MNzUjNAz7U+iYtbSxaiR/8LQ5F16hm0xOC+54htnAjpWgsD5numhzEUj1SpGgKKtAo1FoBcIs+26ARItBvnJFVh4="
