jobs:
  include:

  # - stage: test
  #   before_script:
  #   - echo $DOCKER_TOKEN | docker login --username $DOCKER_USERNAME --password-stdin
  #   - docker pull samseedsoftwire/todo-app-test:latest
  #   - docker build --target test --tag samseedsoftwire/todo-app-test:latest .
  #   script:
  #   - docker run samseedsoftwire/todo-app-test:latest "tests/tests_unit" -rA
  #   - docker run samseedsoftwire/todo-app-test:latest "tests/tests_integration" -rA
  #   - docker run -e COSMOS_USERNAME=$COSMOS_USERNAME -e COSMOS_PASSWORD=$COSMOS_PASSWORD -e COSMOS_HOST=$COSMOS_HOST -e COSMOS_PORT=$COSMOS_PORT -e COSMOS_TODO_APP_DATABASE=$COSMOS_TODO_APP_DATABASE -e FLASK_APP=$FLASK_APP -e FLASK_ENV=$FLASK_ENV samseedsoftwire/todo-app-test:latest "tests/tests_e2e" -rA
  #   after_success:
  #   - docker tag samseedsoftwire/todo-app-test:latest samseedsoftwire/todo-app-test:$TRAVIS_COMMIT
  #   - docker push samseedsoftwire/todo-app-test:latest
  #   - docker push samseedsoftwire/todo-app-test:$TRAVIS_COMMIT

  # - stage: publish
  #   before_script:
  #   - echo $DOCKER_TOKEN | docker login --username $DOCKER_USERNAME --password-stdin
  #   - docker build --target prod --tag samseedsoftwire/todo-app-prod:latest .
  #   - docker tag samseedsoftwire/todo-app-prod:latest samseedsoftwire/todo-app-prod:$TRAVIS_COMMIT
  #   script:
  #   - docker push samseedsoftwire/todo-app-prod:latest
  #   - docker push samseedsoftwire/todo-app-prod:$TRAVIS_COMMIT

  - stage: deploy
    install:
    # Install Terraform
    - wget https://releases.hashicorp.com/terraform/"$TF_VERSION"/terraform_"$TF_VERSION"_linux_amd64.zip
    - unzip terraform_"$TF_VERSION"_linux_amd64.zip
    - sudo mv terraform /usr/local/bin/
    - rm terraform_"$TF_VERSION"_linux_amd64.zip
    - terraform init
    script:
    - skip
    before_deploy:
    - terraform apply -auto-approve -var 'prefix=dev'
    deploy:
      provider: script
      script: bash ./deploy_prod.sh
      skip_cleanup: true

  - stage: check_deployment
    script:
    - curl_response=$(curl "$(terraform output -raw webapp_url)")
    - if [[ "$curl_response" == *"To-Do App"* ]] || [[ "$curl_response" == *"https://github.com/login/oauth/authorize"* ]]; then echo "Successful curl!"; else >&2 echo "Curl failure :("; return 1; fi

services:
- docker

env:
  global:

  ### Azure ###
  - AZURE_APP_SERVICE_NAME=softwirepilot-samseed-projectexercise-app-service
  - ARM_ACCESS_KEY=iUF0GrZL2sguLjZGaKelt6ONtO1+bkFZ8SKkpFvubyTVOGQ27xuVjqBRLOEEe2tVyQzfkAjvVLV+GDIe3aMDnQ==
  - ARM_CLIENT_ID=00c795a0-a492-4182-aaf6-6e8d4d515bc2
  - ARM_TENANT_ID=7d6f97d6-d755-4c10-b763-409cc4b6638f
  - ARM_SUBSCRIPTION_ID=d33b95c7-af3c-4247-9661-aa96d47fccc0
  - ARM_CLIENT_SECRET=HM7b3_Hr92cugsI8aP.JKPTPQD3N~r6zss
  # AZURE_APP_SERVICE_DEPLOYMENT_PASSWORD
  - secure: "VPZkK50CJietKKKzCEc9w2zfF91zAHfUjTsRGdYBPrpzUiAJeHlfORVftgDQLOhbYPlp9rTAyIhA9gz6QWZVvo2pmzuyUeLn2BB8T9TZHuWJR18IDh8LgVS7b1ngVjBjnA/sflGafOyJFvc8Nh0LNbRmKbq5plZsDKkbGqWY0sqgKMQte0Mn/RMuo91KQxQR5F+u1Jz09k3Fy3Zcu5c0e86FWThvi5u/n0BfMcP/x0RC8CiwHp8ZvLyIIWkL7tmc8fDTmBlSR9SDQXxGZOHJUcJycUXiu0mWzI/qQtHFgYsx6Nk9oA/+D+npFFjKKKh7XsRlhBQooaZv+mc/2QMVWy4IL0MGL7DUbAtf2N2CrbcNAHiHRCF7dEjQVywziSbmQwfkebNX+L+bLjjfddpS1QUxoTJlA5GpuTRGLmtLP543mSaFRtg/CcztNw6cxlhalb4HAn5RbF7hzCM8a1HN8K/SFaoNSWLAaOTk4nNQn+2a/KK+ycYGMcPdPsfC6u+Whz1xsCO1V5D0DhsZOx0Awq5C0gu2JxGrrKaWPtVxn3oQ0d1D2Wy4vxBEl8TTf7pVyiKjcVUDAb74AXv3ypPLlC7ssCwZgn4dKluvmXI3MmDzxF6zXTTFs8ruY/QzAx+M0DJTjOr1/kRCk7SjV2/j2qTiGuP217Tp/qY+ez9wUHA="

  ### Docker ###
  - DOCKER_USERNAME=samseedsoftwire
  # DOCKER_TOKEN
  - secure: "Unpltfd/dDkhWPM7aHMzQvLn48HUyQDI1yNZjCQ59oaSNxRugzcIhiIgi8VUMJ2YdAtZWl2+Xs5AcLkvEngWAokwlBGHoDb8fGKIjWaYPUjuR/D92VnMAgcZXBgRDYTpoBbUOjs5YIHz1PgDLt2RV1RxlDqBfadUy7qMuJ8h2wjP4VFSdctQ5luiwIlvGS2rKtqRyX/fI31ZRDFAP80T3nVRtp8iGezsCbGTBoYtCBtNzK2bU4E0gED33Zd6wo+4Q+1uB5QyfYX7NIDixcnjIjCrTKOXpMzYKhFy9HLgKtm79nHDgUHL+zywAdqjwV6vE61egIUGH7m86FFNgvyJK9c0kN1Pcf7NiST5XFIwyi7Y86ji0uOS40FuosOAxgVY42jyRdNhDkpS4m4CA2bcO6FVhbstroIilw6wAtlVCfg0rJyqgg+C+UCrsdQZohjFhge3wupMPlT3vVlGJbXKtxIdOySaM5K1FK1P8hEQMFKX1N12Qzl6AMVVMxq+7wlED9KohM2/Yt+tETdy9AldeVO7zHSVGUFBSGQ/5h+hOUWAT5rJH8TVnkTR2dLdtDiVjlWHPjSBS89lPk7bpN9gvQzihBrcPQ3bzWFHr+4xrr6p7IyUL9MB3Rh/AC7IkMZZvL/ygQfExp/uXYE8kMIxVMzOJC7zuUpVLOagheqyq28="

  ### Flask ###
  - FLASK_APP=./application/app
  - FLASK_ENV=development

  ### CosmosDB ###
  - COSMOS_USERNAME=softwirepilot-samseed-projectexercise-cosmos
  - COSMOS_HOST=softwirepilot-samseed-projectexercise-cosmos.mongo.cosmos.azure.com
  - COSMOS_PORT=10255
  - COSMOS_TODO_APP_DATABASE=softwirepilot-samseed-projectexercise-mongodb
  # COSMOS_PASSWORD
  - secure: "cP/icx8p3jCBU5gmaPaMe8+kVfVNV/HzpeEJO1Xad1no1XJ2FF1ysiKzYA6Luazdc5Vgkkrx1/5uCLyU+hdQfpt3IzCZq+y6llEhzTJxj2XliCBDvmaYbl7fYfWutHk6WzTO8cRZl6ifXo0WrDOZ7zf9uIcwVU7fWzrPr6IvIZtx7oWL2ihEWfNGLUS8NC2o6T7NB8kmbNfliWGKnzvyiSO7h/iNubJFmdNoOMSzeG5dzbdMesf6HHjBP+Xt/rVggKO8/2sfZ77CXS0XNhnkXZEhKWiXlZxKmpVEu/ns9UdlX6TGUSwefBgD6GDRFhMmCiNNRVcYm9IakyTtyS/D7RDOi9+92k8A5u49oK/kO3qlEObGkR2cVCijhjupcwAE1SFi3EexaPCdpbKFP5GOgtdhBMFePxKRu0CfDBUeB8UCymL1aOjd5GfWoifrdT7PLCfv4S7DRc0VnVoBLeC18qYcAFFPIaiqPd7coVaOz4TRljrBlKuoBOku97GOE0MJWPAeFVCd74U4OAygRljWNlJNunq9a/6vHpPkNpbqZp24AJKAiJJ5N0p9l/NvLk6A74NwF7kiM1ePijZgsOgUxiUlPqUUrvfJMIqNzhx6RcwPeJ2MjzziA12Irg/NYT16RMtvVZ0Z3Ci52p6gZvTRg+8gmXDcgeCzU3SUshAp2Io="

  ### Terraform ###
  - TF_VERSION=0.14.7

notifications:
  slack:
    secure: "bk8pIUB45EdlSUDHVsMif7N6QnbsWPc5gHYOXWA7KuCYbFzwME6uinXghoXijIUexhJ1l6X22AXQoxKOGCKQgBBFc4U+R2EeGikIY6d/k2k14j1W6L13cdgJ42mQphDtWUB15yObZk1Nlk94PoFbIech1EIc6YUkzeHG27CNiLGmVSSFXVn29qIzUF0eJhln6YelHJXKFWMIoyJJUHx599IE/A9T2Cu2jNwjPMyvfcyHwCJ+Pk2Yl7o9QJs7d8P+enZjRxOBT6tFDiGZYfcK2HlvwJaD3s0ZFJHpC9+PDDo2GVTa9RhOop3ScAZup10iiyAzyCa36w6/Rqqyj4tK2fZJpIv/L7pHXV85zsrBBIsh3bHt2zBVxXKcrlfYJ7XyvYoPi2yPuD6A6ARFCrcfmTyfePhdvjL3MaIHXbZcElAiH8oBbPJ2kj+3asgGjTAUWdnfF/o6ozlfD5/CVhRHNY0KmqDMqjJkXcLzFZOUIraK2SaC5oQmfoSj+CauDsxKt3Lk/pmzR9TdZfh07ce99GYx+sS2umSxriDLib9oMinpwNDWO487vTArjTKd0DJrgdZ1+6S8lZtgDsXHD/1MNzUjNAz7U+iYtbSxaiR/8LQ5F16hm0xOC+54htnAjpWgsD5numhzEUj1SpGgKKtAo1FoBcIs+26ARItBvnJFVh4="
